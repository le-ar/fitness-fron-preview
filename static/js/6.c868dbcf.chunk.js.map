{"version":3,"sources":["features/menu/MenuDay.tsx","features/menu/MenuMonth.tsx","features/menu/MenuWeek.tsx","features/menu/MenuPage.tsx"],"names":["MenuDay","styled","props","useState","Date","now","day","selectedRecipe","setSelectedRecipe","className","Modal","show","onHide","centered","Header","closeButton","Body","style","position","right","top","bottom","Button","left","display","toLocaleDateString","width","flexDirection","alignItems","maxWidth","RecipeCard","Alert","MenuMonth","MenuWeek","MenuPage","menuType","type","Link","href"],"mappings":"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","file":"static/js/6.c868dbcf.chunk.js","sourcesContent":["import { useState } from 'react';\nimport Alert from 'react-bootstrap/esm/Alert';\nimport Modal from 'react-bootstrap/esm/Modal';\nimport styled from 'styled-components';\nimport Button from '../button/Button';\nimport RecipeCard from '../recipe/components/RecipeCard';\n\ninterface MenuDayProps {\n    className?: string;\n}\n\nfunction MenuDayComp(props: MenuDayProps) {\n    // Utils and calculated\n\n    // Pending vars\n\n    // UseState\n    const [day, setDay] = useState(Date.now());\n    const [selectedRecipe, setSelectedRecipe] = useState(-1);\n\n    // UseCases\n\n    // UseEffect\n\n    return (\n        <div className={props.className}>\n            <Modal\n                show={selectedRecipe > -1}\n                onHide={() => setSelectedRecipe(-1)}\n                centered\n            >\n                <Modal.Header closeButton>RecipeName</Modal.Header>\n                <Modal.Body>IMG</Modal.Body>\n                <div\n                    style={{\n                        position: 'absolute',\n                        right: -50,\n                        top: 0,\n                        bottom: 0,\n                    }}\n                >\n                    <Button\n                    >\n                        R\n                    </Button>\n                </div>\n                <div\n                    style={{\n                        position: 'absolute',\n                        left: -50,\n                        top: 0,\n                        bottom: 0,\n                    }}\n                >\n                    <Button\n                    >\n                        L\n                    </Button>\n                </div>\n            </Modal>\n            <div style={{display: 'flex'}}>\n                <div><Button>P</Button></div>\n                <div>{new Date(day).toLocaleDateString()}</div>\n                <div><Button>N</Button></div>\n            </div>\n            <div><Button>Add to cart products</Button></div>\n            <div style={{ width: '100%' }}>\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <h3>Завтрак</h3>\n                    <div style={{ width: '100%', maxWidth: 800 }}>\n                        <div className=\"mb-3\">\n                            <RecipeCard />\n                        </div>\n                        <div className=\"mb-3\">\n                            <RecipeCard />\n                        </div>\n                        <div className=\"mb-3\">\n                            <RecipeCard />\n                        </div>\n                    </div>\n                </div>\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <h3>Обед</h3>\n                    <div style={{ width: '100%', maxWidth: 800 }}>\n                        <div className=\"mb-3\">\n                            <RecipeCard />\n                        </div>\n                    </div>\n                </div>\n                <div\n                    style={{\n                        width: '100%',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        alignItems: 'center',\n                    }}\n                >\n                    <div style={{ width: '100%', maxWidth: 800 }}>\n                        <Alert>На следующий день замочите крупу</Alert>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst MenuDay = styled(MenuDayComp)`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport default MenuDay;\n","import styled from 'styled-components';\nimport MenuDay from './MenuDay';\n\ninterface MenuMonthProps {\n    className?: string;\n}\n\nfunction MenuMonthComp(props: MenuMonthProps) {\n    // Utils and calculated\n\n    // Pending vars\n\n    // UseState\n\n    // UseCases\n\n    // UseEffect\n\n    return (\n        <div className={props.className}>\n            <MenuDay />\n            <MenuDay />\n            <MenuDay />\n        </div>\n    );\n}\n\nconst MenuMonth = styled(MenuMonthComp)``;\n\nexport default MenuMonth;\n","import styled from 'styled-components';\nimport Button from '../button/Button';\nimport MenuDay from './MenuDay';\n\ninterface MenuWeekProps {\n    className?: string;\n}\n\nfunction MenuWeekComp(props: MenuWeekProps) {\n    // Utils and calculated\n\n    // Pending vars\n\n    // UseState\n\n    // UseCases\n\n    // UseEffect\n\n    return (\n        <div className={props.className}>\n            <div>\n                <Button>Add to cart products</Button>\n            </div>\n            <MenuDay />\n            <MenuDay />\n            <MenuDay />\n        </div>\n    );\n}\n\nconst MenuWeek = styled(MenuWeekComp)``;\n\nexport default MenuWeek;\n","import styled from 'styled-components';\nimport Link from '../link/Link';\nimport MenuDay from './MenuDay';\nimport MenuMonth from './MenuMonth';\nimport MenuWeek from './MenuWeek';\n\ninterface MenuPageProps {\n    className?: string;\n    type?: 'day' | 'week' | 'month';\n}\n\nfunction MenuPageComp(props: MenuPageProps) {\n    let menuType;\n    switch (props.type) {\n        case 'month':\n            menuType = <MenuMonth />;\n            break;\n        case 'week':\n            menuType = <MenuWeek />;\n            break;\n        default:\n            menuType = <MenuMonth />;\n            break;\n    }\n\n    return (\n        <div className={props.className}>\n            <div style={{ display: 'flex' }}>\n                <div className=\"mx-2\">\n                    <Link href=\"/menu?type=day\">День</Link>\n                </div>\n                <div className=\"mx-2\">\n                    <Link href=\"/menu?type=week\">Неделя</Link>\n                </div>\n                <div className=\"mx-2\">\n                    <Link href=\"/menu?type=month\">Месяц</Link>\n                </div>\n            </div>\n            <div style={{ width: '100%' }}>\n                {menuType}\n            </div>\n        </div>\n    );\n}\n\nconst MenuPage = styled(MenuPageComp)`\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 16px;\n`;\n\nexport default MenuPage;\n"],"sourceRoot":""}