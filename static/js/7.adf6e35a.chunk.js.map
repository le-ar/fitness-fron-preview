{"version":3,"sources":["features/product/usecases/getProductsUseCase.ts","features/product/ProductsPage.tsx","core/hooks.tsx"],"names":["GetProductsUseCase","settings","offset","a","sleep","products","hasNextPage","id","name","img","weightType","ProductWeightType","GRAMS","vitamins","vitamin","count","calories","proteins","fats","carbohydrates","ProductsPage","styled","props","gcm","GenerateClassName","className","useState","setOffset","setProducts","setHasNextPage","loadMoreRef","useRef","isLoadMoreOnScreen","ref","rootMargin","isIntersecting","setIntersecting","useEffect","element","current","observer","IntersectionObserver","entry","observe","disconnect","useOnScreen","loadProducts","useUseCaseCallback","isUnmounted","then","result","length","Link","href","Row","map","product","Col","md","lg","Product","Spinner","animation","variant"],"mappings":"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","file":"static/js/7.adf6e35a.chunk.js","sourcesContent":["import { UseCaseSettings } from '../../../core/usecase';\nimport { sleep } from '../../../core/utils';\nimport { Product, ProductWeightType } from '../models/product';\n\nexport async function GetProductsUseCase(\n    settings: UseCaseSettings,\n    offset: number\n): Promise<{ products: Product[]; hasNextPage: boolean }> {\n    await sleep(500);\n    if (offset > 20) {\n        return { products: [], hasNextPage: false };\n    }\n\n    return {\n        products: [\n            {\n                id: offset + 1,\n                name: 'Помидорasdasdasdsda',\n                img: 'https://cdn.tveda.ru/thumbs/564/5649d0ddd17a4b6af07efd2f06123ea6/4d41e53fa8a3623e2cc70257f9b4b73f.jpg',\n                weightType: ProductWeightType.GRAMS,\n\n                vitamins: [\n                    {\n                        vitamin: {\n                            id: 1,\n                            name: 'K',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 2,\n                            name: 'A',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 3,\n                            name: 'B',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 4,\n                            name: 'C',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 5,\n                            name: 'D',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 16,\n                            name: 'E',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 17,\n                            name: 'F',\n                        },\n                        count: 10,\n                    },\n                ],\n\n                calories: 100,\n                proteins: 40,\n                fats: 5,\n                carbohydrates: 20,\n            },\n            {\n                id: offset + 2,\n                name: 'Помидорasdasdasdsda',\n                img: 'https://cdn.tveda.ru/thumbs/564/5649d0ddd17a4b6af07efd2f06123ea6/4d41e53fa8a3623e2cc70257f9b4b73f.jpg',\n                weightType: ProductWeightType.GRAMS,\n\n                vitamins: [\n                    {\n                        vitamin: {\n                            id: 1,\n                            name: 'K',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 2,\n                            name: 'A',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 3,\n                            name: 'B',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 4,\n                            name: 'C',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 5,\n                            name: 'D',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 16,\n                            name: 'E',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 17,\n                            name: 'F',\n                        },\n                        count: 10,\n                    },\n                ],\n\n                calories: 100,\n                proteins: 40,\n                fats: 5,\n                carbohydrates: 20,\n            },\n            {\n                id: offset + 3,\n                name: 'Помидорasdasdasdsda',\n                img: 'https://cdn.tveda.ru/thumbs/564/5649d0ddd17a4b6af07efd2f06123ea6/4d41e53fa8a3623e2cc70257f9b4b73f.jpg',\n                weightType: ProductWeightType.GRAMS,\n\n                vitamins: [\n                    {\n                        vitamin: {\n                            id: 1,\n                            name: 'K',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 2,\n                            name: 'A',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 3,\n                            name: 'B',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 4,\n                            name: 'C',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 5,\n                            name: 'D',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 16,\n                            name: 'E',\n                        },\n                        count: 10,\n                    },\n                    {\n                        vitamin: {\n                            id: 17,\n                            name: 'F',\n                        },\n                        count: 10,\n                    },\n                ],\n\n                calories: 100,\n                proteins: 40,\n                fats: 5,\n                carbohydrates: 20,\n            },\n        ],\n        hasNextPage: true,\n    };\n}\n","import { useEffect, useRef, useState } from 'react';\nimport Col from 'react-bootstrap/esm/Col';\nimport Row from 'react-bootstrap/esm/Row';\nimport Spinner from 'react-bootstrap/esm/Spinner';\nimport styled from 'styled-components';\nimport useOnScreen from '../../core/hooks';\nimport { useUseCaseCallback } from '../../core/usecase';\nimport { GenerateClassName } from '../../core/utils';\nimport Link from '../link/Link';\nimport { Product as ProductType } from './models/product';\nimport Product from './Product';\nimport { GetProductsUseCase } from './usecases/getProductsUseCase';\n\ninterface ProductsPageProps {\n    className?: string;\n}\n\nfunction ProductsPageComp(props: ProductsPageProps) {\n    const gcm = GenerateClassName(props.className);\n\n    const [offset, setOffset] = useState(0);\n    const [products, setProducts] = useState<ProductType[]>([]);\n    const [hasNextPage, setHasNextPage] = useState(true);\n\n    const loadMoreRef = useRef<HTMLDivElement>(null);\n    const isLoadMoreOnScreen = useOnScreen(loadMoreRef, '50px');\n\n    const loadProducts = useUseCaseCallback(GetProductsUseCase);\n\n    useEffect(() => {\n        let isUnmounted = false;\n        if (hasNextPage && isLoadMoreOnScreen) {\n            loadProducts(offset).then((result) => {\n                if (isUnmounted) {\n                    return;\n                }\n\n                setProducts((products) => [...products, ...result.products]);\n                setHasNextPage(result.hasNextPage);\n                if (result.products.length > 0) {\n                    setOffset(result.products[result.products.length - 1].id);\n                }\n            });\n        }\n\n        return () => {\n            isUnmounted = true;\n        };\n    }, [offset, hasNextPage, loadProducts, isLoadMoreOnScreen]);\n\n    return (\n        <div className={props.className}>\n            <div className={gcm('&btn-add_container', 'mb-3')}>\n                <Link href=\"/product/new\">Добавить продукт</Link>\n            </div>\n            <Row>\n                {products.map((product) => (\n                    <Col className=\"mb-3\" key={product.id} md=\"12\" lg=\"6\">\n                        <Product product={product} />\n                    </Col>\n                ))}\n            </Row>\n            {hasNextPage && (\n                <div\n                    ref={loadMoreRef}\n                    className=\"d-flex justify-content-center\"\n                >\n                    <Spinner animation=\"grow\" variant=\"info\" />\n                </div>\n            )}\n        </div>\n    );\n}\n\nconst ProductsPage = styled(ProductsPageComp)`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    padding: 1.5rem;\n\n    &__btn-add_container {\n        display: flex;\n        justify-content: center;\n    }\n`;\n\nexport default ProductsPage;\n","import { MutableRefObject, useEffect, useState } from 'react';\n\nexport default function useOnScreen<T extends Element>(\n    ref: MutableRefObject<T | null | undefined>,\n    rootMargin: string = '0px'\n): boolean {\n    const [isIntersecting, setIntersecting] = useState<boolean>(false);\n    useEffect(() => {\n        const element = ref.current;\n        if (element != null) {\n            const observer = new IntersectionObserver(\n                ([entry]) => {\n                    setIntersecting(entry.isIntersecting);\n                },\n                {\n                    rootMargin,\n                }\n            );\n            observer.observe(element);\n            return () => {\n                observer.disconnect()\n            };\n        }\n    }, [ref, rootMargin]);\n    return isIntersecting;\n}\n"],"sourceRoot":""}